$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'nsxt_policy_client'))
=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

# Common files
require 'nsxt_policy_client/api_client'
require 'nsxt_policy_client/api_error'
require 'nsxt_policy_client/version'
require 'nsxt_policy_client/configuration'

# Models
require 'nsxt_policy_client/models/api_error'
require 'nsxt_policy_client/models/condition'
require 'nsxt_policy_client/models/conjunction_operator'
require 'nsxt_policy_client/models/discovered_resource'
require 'nsxt_policy_client/models/expression'
require 'nsxt_policy_client/models/external_id_expression'
require 'nsxt_policy_client/models/group'
require 'nsxt_policy_client/models/ip_address_expression'
require 'nsxt_policy_client/models/identity_group_expression'
require 'nsxt_policy_client/models/lb_pool'
require 'nsxt_policy_client/models/lb_pool_list_result'
require 'nsxt_policy_client/models/lb_pool_member'
require 'nsxt_policy_client/models/lb_pool_member_group'
require 'nsxt_policy_client/models/lb_snat_translation'
require 'nsxt_policy_client/models/list_result'
require 'nsxt_policy_client/models/mac_address_expression'
require 'nsxt_policy_client/models/managed_resource'
require 'nsxt_policy_client/models/nested_expression'
require 'nsxt_policy_client/models/path_expression'
require 'nsxt_policy_client/models/policy_config_resource'
require 'nsxt_policy_client/models/policy_resource'
require 'nsxt_policy_client/models/policy_resource_reference'
require 'nsxt_policy_client/models/policy_resource_reference_for_ep'
require 'nsxt_policy_client/models/policy_resource_reference_for_ep_list_result'
require 'nsxt_policy_client/models/port_address_binding_entry'
require 'nsxt_policy_client/models/port_attachment'
require 'nsxt_policy_client/models/related_api_error'
require 'nsxt_policy_client/models/resource'
require 'nsxt_policy_client/models/resource_link'
require 'nsxt_policy_client/models/resource_reference'
require 'nsxt_policy_client/models/revisioned_resource'
require 'nsxt_policy_client/models/search_response'
require 'nsxt_policy_client/models/segment_extra_config'
require 'nsxt_policy_client/models/segment_port'
require 'nsxt_policy_client/models/self_resource_link'
require 'nsxt_policy_client/models/tag'
require 'nsxt_policy_client/models/virtual_machine'

# APIs
require 'nsxt_policy_client/api/policy_infra_realized_state_api'
require 'nsxt_policy_client/api/policy_inventory_groups_group_members_api'
require 'nsxt_policy_client/api/policy_inventory_groups_groups_api'
require 'nsxt_policy_client/api/policy_networking_connectivity_segments_ports_api'
require 'nsxt_policy_client/api/policy_networking_network_services_load_balancing_load_balancer_pools_api'
require 'nsxt_policy_client/api/search_search_api_api'

module NSXTPolicy
  class << self
    # Customize default settings for the SDK using block.
    #   NSXTPolicy.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
